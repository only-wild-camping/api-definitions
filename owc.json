{
  "swagger": "2.0",
  "info": {
    "title": "Only Wild Camping - Sites",
    "description": "This is the API concerned with information about the sites available.",
    "version": "1.0.0"
  },
  "host": "api.onlywildcamping.com",
  "schemes": ["https"],
  "basePath": "/sites",
  "produces": ["application/json"],
  "paths": {
    "/": {
      "get": {
        "summary": "Filtered locations",
        "description": "The Locations endpoint returns an array of locations that are within the filter parameters, if they exist. The locations are provided as an ordered array, where the ordering is distance from the centre-point of the filtering box.",
        "parameters": [
          {
            "name": "north_east_latitude",
            "in": "query",
            "description": "Latitude component of the North East corner of the bounding box.",
            "required": true,
            "type": "number",
            "format": "double"
          },
          {
            "name": "north_east_longitude",
            "in": "query",
            "description": "Longitude component of the North East corner of the bounding box.",
            "required": true,
            "type": "number",
            "format": "double"
          },
          {
            "name": "south_west_latitude",
            "in": "query",
            "description": "Latitude component of the South West corner of the bounding box.",
            "required": true,
            "type": "number",
            "format": "double"
          },
          {
            "name": "south_west_longitude",
            "in": "query",
            "description": "Longitude component of the South West corner of the bounding box.",
            "required": true,
            "type": "number",
            "format": "double"
          },
          {
            "name": "required_attributes",
            "in": "query",
            "description": "An array of programmatic attribute-names.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "tags": ["Location"],
        "responses": {
          "200": {
            "description": "An array of locations",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Location"
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a location",
        "description": "The Location PUT endpoint takes a human-readable name for a location and coordinates, then, if successful, returns a programmatic name or, if unsuccessful, returns potential collision-locations.",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "Name of new location.",
            "required": true,
            "type": "string"
          },
          {
            "name": "latitude",
            "in": "query",
            "description": "Latitude of new location.",
            "required": true,
            "type": "number",
            "format": "double"
          },
          {
            "name": "longitude",
            "in": "query",
            "description": "Longitude of new location.",
            "required": true,
            "type": "number",
            "format": "double"
          }
        ],
        "tags": ["Location"],
        "responses": {
          "200": {
            "description": "New Location.",
            "schema": {
              "items": {
                "$ref": "#/definitions/Location"
              }
            }
          }
        }
      }
    },
    "/{location_name}": {
      "get": {
        "summary": "Get details about a specific location",
        "description": "The Location endpoint returns details about a specific location, the information is returned as a JSON object.",
        "parameters": [
          {
            "name": "location_name",
            "in": "path",
            "description": "The unique name of the location.",
            "required": true,
            "type": "string"
          }
        ],
        "tags": ["Location"],
        "responses": {
          "200": {
            "description": "A JSON object containing the information of a specific location.",
            "schema": {
              "items": {
                "$ref": "#/definitions/Location"
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update a location",
        "description": "The Location PUT endpoint updates a specific location with new information.",
        "parameters": [
          {
            "name": "location_name",
            "in": "path",
            "description": "The unique name of the location.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "description": "The updated name to be recorded in the data store.",
            "required": false,
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "description": "The updated description to be recorded in the data store.",
            "required": false,
            "type": "string"
          },
          {
            "name": "capacity",
            "in": "query",
            "description": "The updated capacity to be recorded in the data store.",
            "required": false,
            "type": "number",
            "format": "int"
          },          
          {
            "name": "image",
            "in": "query",
            "description": "The updated image to be recorded in the data store.",
            "required": false,
            "type": "object"
          },
          {
            "name": "latitude",
            "in": "query",
            "description": "The updated latitude to be recorded in the data store.",
            "required": false,
            "type": "number",
            "format": "double"
          },
          {
            "name": "longitude",
            "in": "query",
            "description": "The updated longitude to be recorded in the data store.",
            "required": false,
            "type": "number",
            "format": "double"
          }
        ],
        "tags": ["Location"],
        "responses": {
          "200": {
            "description": "Update operation success.",
            "schema": {
              "items": {
                "$ref": "#/definitions/LocationUpdate"
              }
            }
          }
        }
      }
    },
    "/{location_name}/attributes": {
      "get": {
        "summary": "Get attributes about a specific location",
        "description": "The Location endpoint returns a list of attributes a specific location has, the information is returned as a JSON object.",
        "parameters": [
          {
            "name": "location_name",
            "in": "path",
            "description": "The unique name of the location.",
            "required": true,
            "type": "string"
          }
        ],
        "tags": ["Location"],
        "responses": {
          "200": {
            "description": "A JSON object containing the information of a specific location.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Attribute"
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update the attributes of a specific location",
        "description": "The Location PUT endpoint updates the attributes of a specific location.",
        "parameters": [
          {
            "name": "location_name",
            "in": "path",
            "description": "The unique name of the location.",
            "required": true,
            "type": "string"
          },
          {
            "name": "attributes",
            "in": "query",
            "description": "The attributes to set on the specific location.",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Attribute"
              }
            }
          }
        ],
        "tags": ["Attribute"],
        "responses": {
          "200": {
            "description": "Update operation success.",
            "schema": {
              "items": {
                "$ref": "#/definitions/AttributeUpdate"
              }
            }
          }
        }
      }
    },
    "/attributes": {
      "get": {
        "summary": "Site attributes available",
        "description": "The Attributes endpoint returns information about the attributes assigned to given sites. The response includes the display name and other details about each attributes, and lists the attributes in the proper display order.",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "Short name of attribute.",
            "required": false,
            "type": "string"
          }
        ],
        "tags": ["Attribute"],
        "responses": {
          "200": {
            "description": "An array of attributes",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Attribute"
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create new attribute",
        "description": "The Attribute POST endpoint takes the title of a new attribute and returns the programmatic version of the name, if the operation was successful.",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "Full name of new attribute.",
            "required": true,
            "type": "string"
          }
        ],
        "tags": ["Attribute"],
        "responses": {
          "200": {
            "description": "An attribute object",
            "schema": {
              "items": {
                "$ref": "#/definitions/Attribute"
              }
            }
          },
          "403": {
            "description": "Unauthorised",
            "schema": {
              "items": {
                "$ref": "#/definitions/Unauthorised"
              }
            }
          }
        }
      }
    },
    "/attributes/{attribute_name}": {
      "get": {
        "summary": "Site attributes available",
        "description": "The Attributes endpoint returns information about the attributes assigned to given sites. The response includes the display name and other details about each attributes, and lists the attributes in the proper display order.",
        "parameters": [
          {
            "name": "attribute_name",
            "in": "path",
            "description": "Short name of attribute.",
            "required": true,
            "type": "string"
          }
        ],
        "tags": ["Attribute"],
        "responses": {
          "200": {
            "description": "An attribute object",
            "schema": {
              "items": {
                "$ref": "#/definitions/Attribute"
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update attribute details",
        "description": "The Attributes endpoint returns information about the attributes assigned to given sites. The response includes the display name and other details about each attributes, and lists the attributes in the proper display order.",
        "parameters": [
          {
            "name": "attribute_name",
            "in": "path",
            "description": "Short name of attribute.",
            "required": true,
            "type": "string"
          }
        ],
        "tags": ["Attribute"],
        "responses": {
          "200": {
            "description": "An attribute object",
            "schema": {
              "items": {
                "$ref": "#/definitions/Attribute"
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Attribute": {
      "properties": {
        "attribute_id": {
          "type": "int",
          "description": "Unique identifier representing a specific attribute."
        },
        "description": {
          "type": "string",
          "description": "Description of location."
        },
        "display_name": {
          "type": "string",
          "description": "Display name of location."
        },
        "image": {
          "type": "string",
          "description": "A URL representing the primary image of the location."
        }
      }
    },
    "Location": {
      "properties": {
        "location_id": {
          "type": "int",
          "description": "Unique identifier representing a specific location."
        },
        "description": {
          "type": "string",
          "description": "Description of location."
        },
        "display_name": {
          "type": "string",
          "description": "Display name of location."
        },
        "capacity": {
          "type": "number",
          "format": "int",
          "description": "Capacity of location. For example, 4 people."
        },
        "image": {
          "type": "string",
          "description": "A URL representing the primary image of the location."
        },
        "latitude": {
          "type": "number",
          "format": "double",
          "description": "The latitude of the location."
        },
        "longitude": {
          "type": "number",
          "format": "double",
          "description": "The longitude of the location."
        }
      }
    },
    "LocationUpdate": {
      "properties": {
        "success": {
          "type": "boolean",
          "description": "Update success."
        }
      }
    },
    "LocationCreate": {
      "properties": {
        "success": {
          "type": "boolean",
          "description": "Creation success."
        },
        "reason": {
          "type": "string",
          "description": "Reason for location not being created."
        },
        "locations": {
          "description": "Array of conflicting locations",
          "schema": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Location"
            }
          }
        }
      }
    },
    "AttributeUpdate": {
      "properties": {
        "success": {
          "type": "boolean",
          "description": "Update success."
        }
      }
    },
    "Unauthorised": {
      "properties": {
        "success": {
          "type": "string",
          "description": "Unauthorised reason"
        }
      }
    }
  }
}