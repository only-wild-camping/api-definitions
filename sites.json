{
  "openapi": "3.0.1",
  "info": {
    "title": "Only Wild Camping - Sites",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://api.onlywildcamping.com/{basePath}",
      "variables": {
        "basePath": {
          "default": "/sites"
        }
      }
    }
  ],
  "paths": {
    "/{urn}/attributes/{attribute}": {
      "delete": {
        "parameters": [
          {
            "name": "attribute",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "urn",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "204 response",
            "content": {}
          }
        },
        "security": [
          {
            "Cognito": [
              "delete_attribute"
            ]
          }
        ],
        "x-amazon-apigateway-request-validator": "params-only",
        "x-amazon-apigateway-integration": {
          "credentials": "arn:aws:iam::971719831950:role/APIGatewayUpdateItemLocations",
          "uri": "arn:aws:apigateway:eu-west-1:dynamodb:action/UpdateItem",
          "responses": {
            "200": {
              "statusCode": "204"
            }
          },
          "requestTemplates": {
            "application/json": "{\n    \"TableName\": \"Locations\",\n    \"Key\": {\n\t\t\"urn\": {\n\t\t\t\"S\": \"$input.params().path.get('urn')\"\n\t\t}\n\t},\n    \"UpdateExpression\": \"DELETE attributes :attrs\",\n    \"ExpressionAttributeValues\": {\n        \":attrs\": {\n            \"SS\": [\n                \"$input.params().path.get('attribute')\"\n            ]\n        }\n    },\n    \"ReturnValues\": \"NONE\"\n}"
          },
          "passthroughBehavior": "when_no_templates",
          "httpMethod": "POST",
          "type": "aws"
        }
      },
      "options": {
        "responses": {
          "200": {
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Empty"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'DELETE,OPTIONS'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "passthroughBehavior": "when_no_match",
          "type": "mock"
        }
      }
    },
    "/{urn}": {
      "get": {
        "parameters": [
          {
            "name": "urn",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocationResponse"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-request-validator": "params-only",
        "x-amazon-apigateway-integration": {
          "credentials": "arn:aws:iam::971719831950:role/APIGatewayGetItemLocations",
          "uri": "arn:aws:apigateway:eu-west-1:dynamodb:action/GetItem",
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($item = $input.path('$').Item){#foreach($top_key in $item.keySet())#foreach($mid_key in $item.get($top_key).keySet())#if($mid_key == 'S')\"$top_key\": \"$item.get($top_key).S\"#elseif($mid_key == 'N')\"$top_key\": $item.get($top_key).N#elseif($mid_key == 'BOOL')\"$top_key\": $item.get($top_key).BOOL#elseif($mid_key == 'SS')\"$top_key\": [#foreach($element in $item.get($top_key).SS)\"$element\"#if($foreach.hasNext), #end#end]#end#end#if($foreach.hasNext), #end#end}"
              }
            }
          },
          "requestTemplates": {
            "application/json": "{\n\t\"ConsistentRead\": true,\n\t\"Key\": {\n\t\t\"urn\": {\n\t\t\t\"S\": \"$input.params().path.get('urn')\"\n\t\t}\n\t},\n\t\"ReturnConsumedCapacity\": \"NONE\",\n\t\"TableName\": \"Locations\"\n}"
          },
          "passthroughBehavior": "when_no_templates",
          "httpMethod": "POST",
          "type": "aws"
        }
      },
      "delete": {
        "parameters": [
          {
            "name": "urn",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "204 response",
            "content": {}
          }
        },
        "security": [
          {
            "Cognito": [
              "delete_site"
            ]
          }
        ],
        "x-amazon-apigateway-request-validator": "params-only",
        "x-amazon-apigateway-integration": {
          "credentials": "arn:aws:iam::971719831950:role/APIGatewayDeleteItemLocations",
          "uri": "arn:aws:apigateway:eu-west-1:dynamodb:action/DeleteItem",
          "responses": {
            "200": {
              "statusCode": "204"
            }
          },
          "requestTemplates": {
            "application/json": "{\n    \"TableName\": \"Locations\",\n    \"Key\": {\n\t\t\"urn\": {\n\t\t\t\"S\": \"$input.params().path.get('urn')\"\n\t\t}\n\t},\n    \"ReturnValues\": \"NONE\"\n}"
          },
          "passthroughBehavior": "when_no_templates",
          "httpMethod": "POST",
          "type": "aws"
        }
      },
      "options": {
        "responses": {
          "200": {
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Empty"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'DELETE,GET,OPTIONS,PATCH'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "passthroughBehavior": "when_no_match",
          "type": "mock"
        }
      },
      "patch": {
        "parameters": [
          {
            "name": "urn",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Location"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocationResponse"
                }
              }
            }
          },
          "201": {
            "description": "201 response",
            "content": {}
          },
          "400": {
            "description": "400 response",
            "content": {}
          },
          "500": {
            "description": "500 response",
            "content": {}
          }
        },
        "security": [
          {
            "Cognito": [
              "update_site"
            ]
          }
        ],
        "x-amazon-apigateway-request-validator": "params-and-body",
        "x-amazon-apigateway-integration": {
          "uri": "arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-west-1:971719831950:function:create-or-update-site/invocations",
          "responses": {
            "\\{\\\"status\\\": 400.*": {
              "statusCode": "400",
              "responseTemplates": {
                "application/json": "#set ($em = $util.parseJson($input.path('$.errorMessage')))\n{\"message\": \"$em.message\", \"error\": \"$em.error\"}"
              }
            },
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            },
            "\\{\\\"status\\\": 500.*": {
              "statusCode": "500",
              "responseTemplates": {
                "application/json": "#set ($em = $util.parseJson($input.path('$.errorMessage')))\n{\"message\": \"$em.message\", \"error\": \"$em.error\"}"
              }
            }
          },
          "requestTemplates": {
            "application/json": "{\"method\": \"$context.httpMethod\", \"action\": \"update\", \"urn\": \"$input.params().path.get('urn')\", \"body\": $input.json('$')}"
          },
          "passthroughBehavior": "when_no_templates",
          "httpMethod": "POST",
          "contentHandling": "CONVERT_TO_TEXT",
          "type": "aws"
        }
      }
    },
    "/{urn}/{property}": {
      "get": {
        "parameters": [
          {
            "name": "property",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "urn",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PropertyResponse"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-request-validator": "params-only",
        "x-amazon-apigateway-integration": {
          "credentials": "arn:aws:iam::971719831950:role/APIGatewayGetItemLocations",
          "uri": "arn:aws:apigateway:eu-west-1:dynamodb:action/GetItem",
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($item = $input.path('$').Item)\n{#foreach($top_key in $item.keySet())#foreach($mid_key in $item.get($top_key).keySet())#if($mid_key == 'S')\"$top_key\": \"$item.get($top_key).S\"#elseif($mid_key == 'N')\"$top_key\": $item.get($top_key).N#elseif($mid_key == 'BOOL')\"$top_key\": $item.get($top_key).BOOL#end#end#if($foreach.hasNext), #end#end}"
              }
            }
          },
          "requestTemplates": {
            "application/json": "{\n\t\"ConsistentRead\": true,\n\t\"Key\": { \n\t\t\"urn\" : { \n\t\t\t\"S\": \"$input.params().path.get('urn')\"\n\t\t}\n\t},\n\t\"ExpressionAttributeNames\": { \n      \"#property\" : \"$input.params().path.get('property')\" \n    },\n\t\"ProjectionExpression\": \"#property\",\n    \"ReturnConsumedCapacity\": \"NONE\",\n    \"TableName\": \"Locations\"\n}"
          },
          "passthroughBehavior": "when_no_templates",
          "httpMethod": "POST",
          "type": "aws"
        }
      },
      "delete": {
        "parameters": [
          {
            "name": "property",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "urn",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "204 response",
            "content": {}
          }
        },
        "security": [
          {
            "Cognito": [
              "delete_property"
            ]
          }
        ],
        "x-amazon-apigateway-request-validator": "params-only",
        "x-amazon-apigateway-integration": {
          "credentials": "arn:aws:iam::971719831950:role/APIGatewayUpdateItemLocations",
          "uri": "arn:aws:apigateway:eu-west-1:dynamodb:action/UpdateItem",
          "responses": {
            "200": {
              "statusCode": "204"
            }
          },
          "requestTemplates": {
            "application/json": "{\n    \"TableName\": \"Locations\",\n    \"Key\": {\n\t\t\"urn\": {\n\t\t\t\"S\": \"$input.params().path.get('urn')\"\n\t\t}\n\t},\n    \"UpdateExpression\": \"REMOVE #property\",\n    \"ExpressionAttributeNames\": {\n        \"#property\": \"$input.params().path.get('property')\"\n    },\n    \"ReturnValues\": \"NONE\"\n}"
          },
          "passthroughBehavior": "when_no_templates",
          "httpMethod": "POST",
          "type": "aws"
        }
      },
      "options": {
        "responses": {
          "200": {
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Empty"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'DELETE,GET,OPTIONS'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "passthroughBehavior": "when_no_match",
          "type": "mock"
        }
      }
    },
    "/{urn}/attributes": {
      "get": {
        "parameters": [
          {
            "name": "urn",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {}
          }
        },
        "x-amazon-apigateway-request-validator": "params-only",
        "x-amazon-apigateway-integration": {
          "credentials": "arn:aws:iam::971719831950:role/APIGatewayGetItemLocations",
          "uri": "arn:aws:apigateway:eu-west-1:dynamodb:action/GetItem",
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($item = $input.path('$').Item){#foreach($top_key in $item.keySet())#foreach($mid_key in $item.get($top_key).keySet())#if($mid_key == 'S')\"$top_key\": \"$item.get($top_key).S\"#elseif($mid_key == 'N')\"$top_key\": $item.get($top_key).N#elseif($mid_key == 'BOOL')\"$top_key\": $item.get($top_key).BOOL#elseif($mid_key == 'SS')\"$top_key\": [#foreach($element in $item.get($top_key).SS)\"$element\"#if($foreach.hasNext), #end#end]#end#end#if($foreach.hasNext), #end#end}"
              }
            }
          },
          "requestTemplates": {
            "application/json": "{\n\t\"ConsistentRead\": true,\n\t\"Key\": { \n\t\t\"urn\" : { \n\t\t\t\"S\": \"$input.params().path.get('urn')\"\n\t\t}\n\t},\n\t\"ExpressionAttributeNames\": { \n      \"#property\" : \"attributes\" \n    },\n\t\"ProjectionExpression\": \"#property\",\n    \"ReturnConsumedCapacity\": \"NONE\",\n    \"TableName\": \"Locations\"\n}"
          },
          "passthroughBehavior": "when_no_templates",
          "httpMethod": "POST",
          "type": "aws"
        }
      },
      "options": {
        "responses": {
          "200": {
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Empty"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'GET,OPTIONS'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "passthroughBehavior": "when_no_match",
          "type": "mock"
        }
      }
    },
    "/": {
      "get": {
        "parameters": [
          {
            "name": "north_east_longitude",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "south_west_latitude",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "north_east_latitude",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "required_attributes",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "south_west_longitude",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocationsResponse"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-request-validator": "params-only",
        "x-amazon-apigateway-integration": {
          "credentials": "arn:aws:iam::971719831950:role/APIGatewayScanLocations",
          "uri": "arn:aws:apigateway:eu-west-1:dynamodb:action/Scan",
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($inputRoot = $input.path('$')){\"count\": $inputRoot.Count, \"scanned\": $inputRoot.ScannedCount, \"locations\": [#foreach($item in $inputRoot.Items){#foreach($top_key in $item.keySet())#foreach($mid_key in $item.get($top_key).keySet())#if($mid_key == 'S')\"$top_key\": \"$item.get($top_key).S\"#elseif($mid_key == 'N')\"$top_key\": $item.get($top_key).N#elseif($mid_key == 'BOOL')\"$top_key\": $item.get($top_key).BOOL#elseif($mid_key == 'SS')\"$top_key\": [#foreach($element in $item.get($top_key).SS)\"$element\"#if($foreach.hasNext), #end#end]#end#end#if($foreach.hasNext), #end#end}#if($foreach.hasNext), #end#end]}"
              }
            }
          },
          "requestTemplates": {
            "application/json": "#set($query = $input.params().querystring)\n{\n   \"ConsistentRead\": true,\n   #if ($query.north_east_latitude != \"\" && $query.north_east_longitude != \"\" && $query.south_west_latitude != \"\" && $query.south_west_longitude != \"\")\n   \"FilterExpression\": \"#lat < :ne_lat and #lat > :sw_lat and #lon < :ne_lon and #lon > :sw_lon\",\n   \"ExpressionAttributeNames\": { \n      \"#lat\": \"latitude\",\n      \"#lon\":\"longitude\"\n   },\n   \"ExpressionAttributeValues\": {\n     \":ne_lat\": {\n       \"N\": \"$query.north_east_latitude\"\n     },\n     \":ne_lon\": {\n       \"N\": \"$query.north_east_longitude\"\n     },\n     \":sw_lat\": {\n       \"N\": \"$query.south_west_latitude\"\n     },\n     \":sw_lon\": {\n       \"N\": \"$query.south_west_longitude\"\n     }\n   },\n   #end\n   \"ReturnConsumedCapacity\": \"NONE\",\n   \"Select\": \"ALL_ATTRIBUTES\",\n   \"TableName\": \"Locations\"\n}"
          },
          "passthroughBehavior": "when_no_templates",
          "httpMethod": "POST",
          "type": "aws"
        }
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Location"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocationResponse"
                }
              }
            }
          },
          "201": {
            "description": "201 response",
            "content": {}
          },
          "400": {
            "description": "400 response",
            "content": {}
          },
          "500": {
            "description": "500 response",
            "content": {}
          }
        },
        "security": [
          {
            "Cognito": []
          }
        ],
        "x-amazon-apigateway-request-validator": "body-only",
        "x-amazon-apigateway-integration": {
          "uri": "arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-west-1:971719831950:function:create-or-update-site/invocations",
          "responses": {
            "\\{\\\"status\\\": 400.*": {
              "statusCode": "400",
              "responseTemplates": {
                "application/json": "#set ($em = $util.parseJson($input.path('$.errorMessage')))\n{\"message\": \"$em.message\", \"error\": \"$em.error\"}"
              }
            },
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($lambda_response = $input.path('$'))\n{\n    \"statusCode\": $lambda_response.statusCode,\n    \"body\" : {\n        \"$lambda_response.body.URN\": {\n            \"name\": \"$lambda_response.body.name\",\n            \"description\": \"$lambda_response.body.description\",\n            \"capacity\": $lambda_response.body.capacity,\n            \"image\": \"$lambda_response.body.image\",\n            \"latitude\": $lambda_response.body.latitude,\n            \"longitude\": $lambda_response.body.longitude,\n            \"type\": \"$lambda_response.body.type\"\n        }\n    }\n}\n"
              }
            },
            "\\{\\\"status\\\": 500.*": {
              "statusCode": "500",
              "responseTemplates": {
                "application/json": "#set ($em = $util.parseJson($input.path('$.errorMessage')))\n{\"message\": \"$em.message\", \"error\": \"$em.error\"}"
              }
            }
          },
          "requestParameters": {
            "integration.request.header.request_type": "'GET'"
          },
          "requestTemplates": {
            "application/json": "{\"method\": \"$context.httpMethod\", \"action\": \"create\", \"body\": $input.json('$')}"
          },
          "passthroughBehavior": "when_no_templates",
          "httpMethod": "POST",
          "contentHandling": "CONVERT_TO_TEXT",
          "type": "aws"
        }
      },
      "options": {
        "responses": {
          "200": {
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Empty"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'GET,OPTIONS,POST'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "passthroughBehavior": "when_no_match",
          "type": "mock"
        }
      }
    }
  },
  "components": {
    "schemas": {
      "PropertyResponse": {
        "type": "object",
        "properties": {
          "property": {
            "$ref": "#/components/schemas/Property"
          }
        }
      },
      "Empty": {
        "type": "object"
      },
      "LocationsResponse": {
        "type": "object",
        "properties": {
          "count": {
            "type": "number",
            "description": "The number of the returned locations.",
            "format": "int"
          },
          "scanned": {
            "type": "number",
            "description": "The number of the scanned locations.",
            "format": "int"
          },
          "locations": {
            "type": "array",
            "description": "An array of Location objects that match the query.",
            "items": {
              "$ref": "#/components/schemas/Location"
            }
          }
        }
      },
      "Property": {
        "type": "object",
        "properties": {
          "property": {
            "type": "string"
          }
        }
      },
      "LocationResponse": {
        "$ref": "#/components/schemas/Location"
      },
      "Location": {
        "required": [
          "capacity",
          "latitude",
          "longitude",
          "name",
          "type"
        ],
        "type": "object",
        "properties": {
          "urn": {
            "type": "string",
            "description": "URN of location."
          },
          "name": {
            "type": "string",
            "description": "Display name of location."
          },
          "description": {
            "type": "string",
            "description": "Description of location."
          },
          "type": {
            "type": "string",
            "description": "A URN representing the type."
          },
          "latitude": {
            "type": "number",
            "description": "The latitude of the location.",
            "format": "double"
          },
          "longitude": {
            "type": "number",
            "description": "The longitude of the location.",
            "format": "double"
          },
          "capacity": {
            "type": "number",
            "description": "Capacity of location. For example, 4 people.",
            "format": "int"
          },
          "image": {
            "type": "string",
            "description": "A URL representing the primary image of the location."
          },
          "attributes": {
            "type": "array",
            "description": "A list of the URNs of the attributes associated with this location.",
            "items": {
              "type": "string"
            }
          }
        }
      }
    },
    "securitySchemes": {
      "Cognito": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header",
        "x-amazon-apigateway-authtype": "cognito_user_pools",
        "x-amazon-apigateway-authorizer": {
          "providerARNs": [
            "arn:aws:cognito-idp:eu-west-1:971719831950:userpool/eu-west-1_qDrDmtEF1"
          ],
          "type": "cognito_user_pools"
        }
      }
    }
  },
  "x-amazon-apigateway-gateway-responses": {
    "DEFAULT_4XX": {
      "responseParameters": {
        "gatewayresponse.header.Access-Control-Allow-Methods": "'DELETE,GET,OPTIONS'",
        "gatewayresponse.header.Access-Control-Allow-Origin": "'*'",
        "gatewayresponse.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
      }
    },
    "DEFAULT_5XX": {
      "responseParameters": {
        "gatewayresponse.header.Access-Control-Allow-Methods": "'DELETE,GET,OPTIONS'",
        "gatewayresponse.header.Access-Control-Allow-Origin": "'*'",
        "gatewayresponse.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
      }
    }
  },
  "x-amazon-apigateway-request-validators": {
    "params-only": {
      "validateRequestParameters": true,
      "validateRequestBody": false
    },
    "body-only": {
      "validateRequestParameters": false,
      "validateRequestBody": true
    },
    "params-and-body": {
      "validateRequestParameters": true,
      "validateRequestBody": true
    }
  }
}